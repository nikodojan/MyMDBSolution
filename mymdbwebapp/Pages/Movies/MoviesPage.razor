@page "/movies"
@using mymdbwebapp.Services
@using mymdbwebapp.Models.ViewModels

@inject MoviesService MoviesService;

<div>
    <h4>Here you can find all titles ... movies, series, documentaries, etc.</h4>
    
    <div class="row my-3">
        <div class="col-auto">
            <input type="text"
                   @bind="SearchTitle"
                   @bind:event="oninput"
                   @onkeyup="OnEnterKeyUp"
                   class="form-control"
                   style="width: 20rem"/>
        </div>
        <div class="col-auto">
            <button type="button"
                    @onclick="SearchMovie"
                    class="btn btn-primary">Search</button>
        </div>
    </div>
    
    <div>
        @if (IsLoading)
        {
            <Loader></Loader>
        }
        else
        {
            @foreach (var m in TitleBasicInfos)
            {
                <TitleBasicInfoComponent Title="m"></TitleBasicInfoComponent>
            }
        }

    </div>

    


</div>

@code {
    public List<TitleBasicInfo> TitleBasicInfos { get; set; } = new();

    private string SearchTitle { get; set; } = "";

    private bool IsLoading { get; set; } 
    //protected override void OnParametersSet()
    //{
    //    TitleBasicInfos = MoviesService.GetMovies(20);
    //}

    private async Task SearchMovie()
    {
        IsLoading = true;
        StateHasChanged();
        var args = SearchTitle.Split(' ');
        string queryTitle = string.Empty;
        if (args.Length > 1)
        {
            queryTitle = String.Join('%', args);
        }
        else
        {
            queryTitle = args[0];
        }
        TitleBasicInfos = await MoviesService.SearchByTitle(queryTitle);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task OnEnterKeyUp(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter") await SearchMovie();
    }

    
}
